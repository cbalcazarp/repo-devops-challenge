node {
   def commit_id
   stage('Preparation') {
     checkout scm
     sh "git rev-parse --short HEAD > .git/commit-id"                        
     commit_id = readFile('.git/commit-id').trim()
   }
   stage('test') {
  
       sh 'npm install --only=dev'
       sh 'npm test'
    
   }
   //stage('docker build/push') {
   //  docker.withRegistry('https://index.docker.io/v2/', 'dockerhub') {
   //    def app = docker.build("cbalcazarp/repo-devops-challenge:${commit_id}", '$WORKSPACE/.').push()
   //  }
   //}
//}


stage('Build image') {
       dockerImage = docker.build("cbalcazarp/repo-devops-challenge:latest")
    }
    
 stage('Push image') {
        withDockerRegistry([ credentialsId: "dockerhub", url: "" ]) {
        dockerImage.push()
        }
    }
}